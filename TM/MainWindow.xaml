<Window x:Class="TM.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TM"
        xmlns:domain="clr-namespace:TM.Entities"
        xmlns:models="clr-namespace:TM.Models"
        xmlns:helpers="clr-namespace:TM.Helpers"
        xmlns:sys="clr-namespace:System;assembly=System.Runtime"
        mc:Ignorable="d"
        Title="{Binding WindowTitle, RelativeSource={RelativeSource Self}}"  
        Topmost="{Binding IsChecked, BindsDirectlyToSource=True, ElementName=miStayOnTop, Mode=OneWay, NotifyOnSourceUpdated=True}"
        ResizeMode="CanResize"
        Height="345"
        Width="455"
        MinHeight="345"
        MinWidth="455"
        Name="Main"
        Icon="tasks.ico" 
        Loaded="Main_Loaded" >

    <Window.DataContext>
        <models:MainWindowModel/>
    </Window.DataContext>

    <Window.Resources>

        <sys:Int32 x:Key="ComboBoxWidth">61</sys:Int32>
        <sys:Int32 x:Key="CircleWidth">9</sys:Int32>

        <ContextMenu x:Key="cmNoItem">
            <MenuItem Header="Add Project" Click="MenuItem_AddProject"  />
        </ContextMenu>

        <ContextMenu x:Key="cmProjectItem">
            <MenuItem Header="Add Task" Click="MenuItem_AddTask"  />
            <MenuItem Header="Add Milestone" Click="MenuItem_AddMilestone" />
            <MenuItem Header="Add Protected" Click="MenuItem_AddProtected" />
            <Separator />
            <MenuItem Header="Delete" Click="MenuItem_Delete" />
        </ContextMenu>

        <ContextMenu x:Key="cmMilestoneItem">
            <MenuItem Header="Add Task" Click="MenuItem_AddTask"  />
            <MenuItem Header="Add Protected" Click="MenuItem_AddProtected" />
            <Separator />
            <MenuItem Header="Delete" Click="MenuItem_Delete" />
        </ContextMenu>

        <ContextMenu x:Key="cmTaskItem">
            <MenuItem Header="Add Subtask" Click="MenuItem_AddSubtask"  />
            <MenuItem Header="Add Protected" Click="MenuItem_AddProtected" />
            <Separator />
            <MenuItem Header="Delete" Click="MenuItem_Delete" />
        </ContextMenu>

        <ContextMenu x:Key="cmProtectedItem">
            <MenuItem Header="Add Protected" Click="MenuItem_AddProtected"  />
            <Separator />
            <MenuItem Header="Delete" Click="MenuItem_Delete" />
        </ContextMenu>

        <!-- the data template for all tree view items -->
        <HierarchicalDataTemplate x:Key="TreeViewItemTemplate" ItemsSource="{Binding Nodes}" >
            <DockPanel Margin="3"  LastChildFill="True">
                <Label Content="{Binding ItemPrefix}" VerticalAlignment="Center" VerticalContentAlignment="Center" Margin="0" Padding="0" />
                <Ellipse DockPanel.Dock="Left" Margin="5,0,5,0" Fill="{Binding DotColor}" Width="{Binding Mode=OneWay, Source={StaticResource CircleWidth}}" Height="{Binding Mode=OneWay, Source={StaticResource CircleWidth}}" Stretch="Uniform" VerticalAlignment="Center" />
                <TextBlock x:Name="TextBlock" Text="{Binding Text}" VerticalAlignment="Center" />
                <DockPanel.Style>
                    <Style TargetType="{x:Type DockPanel}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsFound}" Value="true">
                                <Setter Property="DockPanel.Background" Value="Pink" />
                            </DataTrigger>

                        </Style.Triggers>
                    </Style>
                </DockPanel.Style>
            </DockPanel>

            <!-- 
            <HierarchicalDataTemplate.Triggers>
                <DataTrigger Binding="{Binding Path=IsPressed}" Value="True">
                    <Setter Property="ItemsSource" Value="{Binding Nodes}"/>
                </DataTrigger>
            </HierarchicalDataTemplate.Triggers>
            
            -->
        </HierarchicalDataTemplate>



        <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="PriorityEnumValues">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="domain:Priority" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="DifficultyEnumValues">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="domain:Difficulty" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <!-- Converters -->
        <helpers:PriorityToStringConverter x:Key="PriorityConverter"/>
        <helpers:TabSizeConverter x:Key="tabSizeConverter" />
        <BooleanToVisibilityConverter x:Key="BoolToVis" />

        <!-- Styles -->
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Width">
                <Setter.Value>
                    <MultiBinding Converter="{StaticResource tabSizeConverter}">
                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}" />
                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}" Path="ActualWidth" />
                    </MultiBinding>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type TreeViewItem}">
            <EventSetter Event="TreeViewItem.DragOver" Handler="treeView_DragOver"/>
            <EventSetter Event="TreeViewItem.Drop" Handler="treeView_Drop"/>
            <EventSetter Event="TreeViewItem.MouseMove" Handler="treeView_MouseMove"/>
            <EventSetter Event="TreeViewItem.Selected" Handler="TreeViewItemSelected"/>
            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
            <Setter Property="Visibility" Value="{Binding Visibility, Mode=OneWay}" />
            <Setter Property="FontWeight" Value="Normal" />
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="FontWeight" Value="Bold" />
                </Trigger>
            </Style.Triggers>
        </Style>


    </Window.Resources>

    <!--
    <Window.CommandBindings>
        
        <CommandBinding Command="{x:Static local:MainWindow.MD5Command}" Executed="MD5Command_Executed" CanExecute="MD5Command_CanExecute" />
        <CommandBinding Command="{x:Static local:MainWindow.SHA256Command}" Executed="SHA256Command_Executed" CanExecute="SHA256Command_CanExecute" />
        
    </Window.CommandBindings>
    -->

    <Window.InputBindings>
        <KeyBinding Modifiers="Control" Key="S" Command="{Binding SaveCommand, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" />
        <KeyBinding Modifiers="Control" Key="L" Command="{Binding LockCommand, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"/>
        <KeyBinding Modifiers="Control" Key="Q" Command="{Binding ExitCommand, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" />
        <KeyBinding Modifiers="Control" Key="E" Command="{Binding ExpandTreeCommand, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"/>
        <KeyBinding Modifiers="Control" Key="R" Command="{Binding CollapseTreeCommand, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"/>
        <KeyBinding Modifiers="Control" Key="F" Command="{Binding FocusTreeItemCommand, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"/>
        <KeyBinding Modifiers="Control" Key="H" Command="{Binding SortTreeByNameCommand, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"/>
        <KeyBinding Modifiers="Control" Key="D" Command="{Binding SortTreeByDateCommand, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"/>
        <KeyBinding Modifiers="Control" Key="T" Command="{Binding TimeStampCommand, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"/>
    </Window.InputBindings>

    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Menu Grid.Row="0" FocusManager.IsFocusScope="False" >
            <MenuItem Header="_File">
                <MenuItem Header="New" Command="{Binding NewCommand, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"/>
                <MenuItem Header="Open" Command="{Binding OpenCommand, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" />
                <MenuItem Header="Save" InputGestureText="Ctrl+S" Command="{Binding SaveCommand, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" />
                <MenuItem Header="SaveAs" Command="{Binding SaveAsCommand, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" />
                <Separator />
                <MenuItem Header="Lock" InputGestureText="Ctrl+L" Command ="{Binding LockCommand, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"/>
                <Separator />
                <MenuItem Header="Change password" Command ="{Binding ChangePasswordCommand, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"/>
                <Separator />
                <MenuItem Header="Compability">
                    <MenuItem Header="Save unecrypted" Command ="{Binding SaveUnencryptedCommand, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"/>
                    <MenuItem Header="Load unecrypted" Command ="{Binding LoadUnencryptedCommand, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"/>
                </MenuItem>
                <Separator />
                <MenuItem Header="Close" InputGestureText="Ctrl+Q" Command="{Binding ExitCommand, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" />
            </MenuItem>
            <MenuItem Header="_Edit" IsEnabled="{Binding IsFileLoaded}">
                <MenuItem Command="Cut" />
                <MenuItem Command="Copy" />
                <MenuItem Command="Paste" />
                <MenuItem Command="Undo" />
                <MenuItem Command="Redo" />
                <!--<MenuItem Header="Test" Command="models:MainWindowModel.TestCommand"  />-->
            </MenuItem>
            <MenuItem Header="Common" IsEnabled="{Binding IsFileLoaded}">
                <MenuItem Header="Expand Tree" InputGestureText="Ctrl+E" Command="{Binding ExpandTreeCommand, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"/>
                <MenuItem Header="Collapse Tree" InputGestureText="Ctrl+R" Command="{Binding CollapseTreeCommand, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"/>
                <MenuItem Header="Focus Item" InputGestureText="Ctrl+F" Command="{Binding FocusTreeItemCommand, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"/>
                <MenuItem Header="Sort Tree (name)" InputGestureText="Ctrl+H" Command="{Binding SortTreeByNameCommand, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"/>
                <MenuItem Header="Sort Tree (date)" InputGestureText="Ctrl+D" Command="{Binding SortTreeByDateCommand, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"/>
                <Separator />
                <MenuItem Header="Timestamp" InputGestureText="Ctrl+T"  Command="{Binding TimeStampCommand, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"/>
                <Separator />
                <MenuItem Name="miStayOnTop" Header="Stay on top" IsCheckable="True" />
            </MenuItem>

            <MenuItem Header="Util" >
                <MenuItem Header="Convert file to Base64" Command="{Binding FileToBase64Command, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"/>
                <MenuItem Header="Convert file from Base64" Command="{Binding FileFromBase64Command, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"/>
                <Separator />
                <MenuItem Header="GCM AES">
                    <MenuItem Header="Encrypt File (default password)" Command="{Binding EncryptFileCommand, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"/>
                    <MenuItem Header="Decrypt File (default password)" Command="{Binding DecryptFileCommand, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"/>
                    <Separator />
                    <MenuItem Header="Encrypt File (set password)" Command="{Binding EncryptFileSharedCommand, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"/>
                    <MenuItem Header="Decrypt File (set password)" Command="{Binding DecryptFileSharedCommand, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"/>
                </MenuItem>
                <Separator />
                <MenuItem Header="Encrypt File (account)" Command="{Binding EncryptFileAccountCommand, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"/>
                <MenuItem Header="Decrypt File (account)" Command="{Binding DecryptFileAccountCommand, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"/>
                <Separator />
                <MenuItem Header="CMS (PKCS#7)">
                    <MenuItem Header="Generate new signing X509" Command="{Binding GenerateCertificateCommand, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"/>
                    <MenuItem Header="Import signing X509 (pfx)" Command="{Binding ImportCertificateCommand, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"/>
                    <MenuItem Header="Export signing X509 (public .cer)" Command="{Binding ExportCertificateCommand, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"/>
                    <MenuItem Header="Sign file with signing X509" Command="{Binding CreateSignatureCommand, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"/>
                    <MenuItem Header="Verify signature file" Command="{Binding VerifySignatureCommand, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"/>
                </MenuItem>
                <Separator />
                <MenuItem Header="ECDH">
                    <MenuItem Header="Generate new keypair" Command="{Binding GenerateKeysCommand, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"/>
                    <MenuItem Header="Copy public key to clipboard" Command="{Binding GetPublicKeyCommand, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"/>
                    <MenuItem Header="Encrypt file with public key" Command="{Binding EncryptWithPublicKeyCommand, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"/>
                    <MenuItem Header="Decrypt file with private key" Command="{Binding DecryptWithPrivateKeyCommand, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"/>
                </MenuItem>
                <Separator />
                <MenuItem Header="Compute Hash">
                    <MenuItem Header="MD5 Hash" Click="HashFile_Click" />
                    <MenuItem Header="SHA1 Hash" Click="HashFile_Click" />
                    <MenuItem Header="SHA256 Hash" Click="HashFile_Click" />
                    <MenuItem Header="SHA384 Hash" Click="HashFile_Click" />
                    <MenuItem Header="SHA512 Hash" Click="HashFile_Click" />
                </MenuItem>
                <MenuItem Header="HMAC">
                    <MenuItem Header="HMAC Sign">
                        <MenuItem Header="MD5 HMAC" Click="HmacFile_Click" />
                        <MenuItem Header="SHA1 HMAC" Click="HmacFile_Click" />
                        <MenuItem Header="SHA256 HMAC" Click="HmacFile_Click" />
                        <MenuItem Header="SHA384 HMAC" Click="HmacFile_Click" />
                        <MenuItem Header="SHA512 HMAC" Click="HmacFile_Click" />
                    </MenuItem>
                    <MenuItem Header="HMAC Verify">
                        <MenuItem Header="Verify MD5 HMAC" Click="HmacVerifyFile_Click" />
                        <MenuItem Header="Verify SHA1 HMAC" Click="HmacVerifyFile_Click" />
                        <MenuItem Header="Verify SHA256 HMAC" Click="HmacVerifyFile_Click" />
                        <MenuItem Header="Verify SHA384 HMAC" Click="HmacVerifyFile_Click" />
                        <MenuItem Header="Verify SHA512 HMAC" Click="HmacVerifyFile_Click" />
                    </MenuItem>
                </MenuItem>
                <Separator />
                <MenuItem Header="Purge file" Command="{Binding PurgeCommand, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"/>
            </MenuItem>
        </Menu>

        <Grid Grid.Row="1" SizeChanged="Grid_SizeChanged" IsEnabled="{Binding IsFileLoaded}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="180" MinWidth="3" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" MinWidth="3"/>
            </Grid.ColumnDefinitions>

            <TabControl Name="tcTabControl" Grid.Column="0" TabStripPlacement="Bottom" SelectionChanged="TabControl_SelectionChanged" >
                <TabItem Header="Tree" >
                    <DockPanel>
                        <DockPanel DockPanel.Dock="Top" LastChildFill="True" Margin="2,2,2,2" >
                            <Label DockPanel.Dock="Left"  VerticalAlignment="Center" Content="Search" />
                            <TextBox x:Name="txtFilter" Height="Auto" Width="Auto" VerticalContentAlignment="Center" TextChanged="txtFilter_TextChanged"  />
                        </DockPanel >
                        <TreeView x:Name="ProjectTree"
                            Margin="2,2,2,2" 
                            ItemsSource="{Binding Nodes}"
                            ItemTemplate="{StaticResource TreeViewItemTemplate}"
                            MouseRightButtonDown="ProjectTree_MouseRightButtonDown" 
                                  
                            TabIndex="1" 
                            AllowDrop="True">
                            <TreeView.Style>
                                <Style TargetType="{x:Type TreeView}">
                                    <EventSetter Event="TreeViewItem.Drop" Handler="treeView_Drop"/>
                                </Style>
                            </TreeView.Style>


                            <!-- 

                            <TreeView.Style>
                                <Style TargetType="{x:Type TreeView}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsFiltered}" Value="false">
                                            <Setter Property="ItemsSource" Value="{Binding Nodes}"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsFiltered}" Value="true">
                                            <Setter Property="ItemsSource" Value="{Binding FilteredNodes}"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TreeView.Style>
                            -->
                        </TreeView>
                    </DockPanel>
                </TabItem>
                <TabItem Header="Todo" >
                    <ListBox x:Name="Todo" HorizontalContentAlignment="Stretch" 
                             SelectionChanged="Todo_SelectionChanged"
                             ItemsSource="{Binding Todos}">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid Margin="0,2" Background="{Binding Color}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="100" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{Binding Title}" Foreground="{Binding TextColor}" />
                                    <ProgressBar Grid.Column="1" Minimum="0" Maximum="100" Value="{Binding Completion}" />
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>

                    </ListBox>
                </TabItem>

            </TabControl>

            <GridSplitter Grid.Column="1" ResizeDirection="Columns" ResizeBehavior="PreviousAndNext"
                      Width="4" Margin="0" VerticalAlignment="Stretch" HorizontalAlignment="Center" />

            <!-- Visibility="{Binding Path=IsFinished, Converter={StaticResource BoolToVis}}"  Hidden -->

            <!-- item view -->
            <DockPanel Name="dpRightSide" Grid.Column="2" DataContext="{Binding SelectedItem, ElementName=ProjectTree, Mode=OneWay}"  >
                <DockPanel.Style>
                    <Style TargetType="{x:Type DockPanel}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=DataContext, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Hidden"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DockPanel.Style>
                <Label Name="lblId" DockPanel.Dock="Top" Visibility="Collapsed" Content="{Binding Id}"/>
                <!-- size and priority combos-->
                <Grid DockPanel.Dock="Top" Visibility="{Binding IsProjectVisible}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <ComboBox Name="cbDifficulty" Grid.Column="0" HorizontalAlignment="Stretch" ItemsSource="{Binding Source={StaticResource DifficultyEnumValues}}" SelectedValue="{Binding Difficulty}" IsEnabled="{Binding CanEditDifficulty}" TabIndex="2" />
                    <ComboBox Name="cbPriority" Grid.Column="1"  HorizontalAlignment="Stretch" ItemsSource="{Binding Source={StaticResource PriorityEnumValues}}" SelectedValue="{Binding Priority}" IsEnabled="{Binding IsProjectItem}" TabIndex="3" />
                </Grid>

                <!-- name -->
                <DockPanel DockPanel.Dock="Top" LastChildFill="True" Margin="2,8,2,0" >
                    <Label DockPanel.Dock="Left"  VerticalAlignment="Center" Content="Name" />
                    <TextBox x:Name="txtName" Height="Auto" Width="Auto" VerticalContentAlignment="Center" Text="{Binding Text}" TabIndex="4" />
                </DockPanel >

                <!-- protected fields -->
                <DockPanel DockPanel.Dock="Top" LastChildFill="False" Margin="2,8,2,0" Visibility="{Binding IsProtectedVisible}" >
                    <DockPanel DockPanel.Dock="Top" LastChildFill="True" Margin="2,8,2,0" >
                        <Label DockPanel.Dock="Left"  VerticalAlignment="Center" Content="Url    " />
                        <Button x:Name="btCopyUrl" DockPanel.Dock="Right" Content="Copy" VerticalAlignment="Center" Margin="2,0,2,0" Padding="5,5,5,5" Click="btCopyUrl_Click"  />
                        <TextBox x:Name="txtUrl" Height="Auto" Width="Auto" VerticalContentAlignment="Center" Text="{Binding Url}" TabIndex="5" />
                    </DockPanel >
                    <DockPanel DockPanel.Dock="Top" LastChildFill="True" Margin="2,8,2,0" >
                        <Label DockPanel.Dock="Left"  VerticalAlignment="Center" Content="Login" />
                        <Button x:Name="btCopyLogin" DockPanel.Dock="Right" Content="Copy" VerticalAlignment="Center" Margin="2,0,2,0" Padding="5,5,5,5" Click="btCopyLogin_Click"  />
                        <TextBox x:Name="txtLogin" Height="Auto" Width="Auto" VerticalContentAlignment="Center" Text="{Binding Login}" TabIndex="6" />
                    </DockPanel >
                    <DockPanel DockPanel.Dock="Top" LastChildFill="True" Margin="2,8,2,0" Name="dpPass">
                        <Label DockPanel.Dock="Left"  VerticalAlignment="Center" Content="Pass  " />
                        <Button x:Name="btCopyPassword" DockPanel.Dock="Right" Content="Copy" VerticalAlignment="Center" Margin="2,0,2,0" Padding="5,5,5,5" Click="btCopyPassword_Click"  />
                        <ToggleButton x:Name="btEditPassword" DockPanel.Dock="Right" Content="Edit" VerticalAlignment="Center" Margin="2,0,2,0" Padding="5,5,5,5" Checked="ViewPasswordButton_Checked" Unchecked="ViewPasswordButton_Unchecked"  />
                        <Label Name="dummyLabel" Content="password hidden" IsEnabled="False"/>
                        <TextBox x:Name="txtPass" Height="Auto" Width="Auto" VerticalContentAlignment="Center" Text="" IsEnabled="True"  TabIndex="7" Visibility="Collapsed" />
                    </DockPanel >
                    <DockPanel DockPanel.Dock="Top" LastChildFill="True" Margin="2,8,2,0" IsEnabled="False" Name="dockpanelGenerate" >
                        <Label DockPanel.Dock="Left"  VerticalAlignment="Center" Content="Length" Margin="2,0,2,0" />
                        <Button DockPanel.Dock="Right" Content="Generate" VerticalAlignment="Center" Margin="2,0,2,0" Padding="5,5,5,5" Click="GenerateButton_Click" />
                        <CheckBox DockPanel.Dock="Right" Content="Complex" VerticalAlignment="Center" Margin="2,0,2,0" Name="chkComplex" />
                        <Label DockPanel.Dock="Right" Content="{Binding Value, ElementName=slPassLen}" VerticalAlignment="Center" VerticalContentAlignment="Center" HorizontalContentAlignment="Right" Padding="1" Margin="2,0,2,0" />
                        <Slider Value="12" Minimum="5"  Maximum="30" LargeChange="10" SmallChange="1" TickPlacement="BottomRight" TickFrequency="1" Name="slPassLen" IsSnapToTickEnabled="True" TabIndex="8" IsTabStop="False" VerticalAlignment="Center" Margin="2,0,2,0" />
                    </DockPanel >
                </DockPanel>



                <!-- created/changed dates -->
                <Grid DockPanel.Dock="Bottom">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <DockPanel Grid.Column="0">
                        <DockPanel DockPanel.Dock="Top">
                            <Label  Content="Created " />
                            <Label  Content="{Binding CreatedString}" />
                        </DockPanel>

                        <DockPanel DockPanel.Dock="Top">
                            <Label  Content="Changed"  />
                            <Label  Content="{Binding ChangedString}" />
                        </DockPanel>
                    </DockPanel>
                    <!-- Visibility="{Binding Path=IsChanged, Converter={StaticResource BoolToVis}}" -->

                    <DockPanel Grid.Column="1" HorizontalAlignment="Right">
                        <Label  Content="Finished " Visibility="{Binding Path=IsFinished, Converter={StaticResource BoolToVis}}" />
                        <Label  Content="{Binding FinishedString}" />
                    </DockPanel>
                </Grid>

                <!-- progess bar-->
                <DockPanel DockPanel.Dock="Bottom" Margin="2,0,2,2" Visibility="{Binding IsProjectVisible}">
                    <Label DockPanel.Dock="Right" Content="%" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" Padding="1"/>
                    <Label DockPanel.Dock="Right" Content="{Binding ElementName=Progress, Path=Value, UpdateSourceTrigger=PropertyChanged}" Width="25" VerticalAlignment="Center" VerticalContentAlignment="Center" HorizontalContentAlignment="Right" Padding="1"/>
                    <Label DockPanel.Dock="Left" Content="Progress" VerticalContentAlignment="Center" VerticalAlignment="Center"/>
                    <Slider Value="{Binding Progress}"  Maximum="100" LargeChange="10" SmallChange="1" TickPlacement="BottomRight" TickFrequency="10" Name="Progress" IsSnapToTickEnabled="True" IsEnabled="{Binding IsLeaf}" TabIndex="12" IsTabStop="False" />
                </DockPanel>

                <!-- date picker-->
                <DockPanel DockPanel.Dock="Bottom" Margin="2,8,2,8" Visibility="{Binding IsProjectVisible}">
                    <Label Content="Due date" VerticalContentAlignment="Center"/>
                    <DatePicker Name="dpDueDate" VerticalContentAlignment="Center" 
                                FirstDayOfWeek="Monday" 
                                SelectedDate="{Binding DueDate}" 
                                TabIndex="11" 
                                DisplayDateEnd="{Binding DateEnd, Mode=OneWay}" 
                                SelectedDateChanged="dpDueDate_SelectedDateChanged"  
                                />
                </DockPanel>

                <!-- description-->
                <Label DockPanel.Dock="Top" Content="Description" Margin="2,8,2,0" />
                <TextBox  DockPanel.Dock="Top" 
                          x:Name="txtDescription"
                      VerticalAlignment="Stretch"
                      TextWrapping="Wrap" 
                      AcceptsReturn="True" 
                      ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                      ScrollViewer.VerticalScrollBarVisibility="Auto"
                      Margin="2" 
                      Text="{Binding Description}" TabIndex="10" 
                          />
            </DockPanel>
        </Grid>
    </Grid>
</Window>
